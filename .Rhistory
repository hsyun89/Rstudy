dev.off()
#문제1번
click <- read.table("product_click.log")
click
tmp<-click %>% group_by(product=click$V2) %>% summarise(number=n())
png(filename="clicklog1.png", height=400, width=1000, bg="white")
barplot(tmp$number, main="세로바 그래프 실습", xlab="상품ID", ylab="클릭 수", col=terrain.colors(15), names.arg=tmp$product)
dev.off()
pie(tmp2$number, main="파이 그래프 실습습",labels=paste(tmp2$V1), col=rainbow(10))
png(filename="clicklog2.png", height=400, width=500, bg="white")
pie(tmp2$number, main="파이 그래프 실습",labels=paste(tmp2$V1), col=rainbow(10))
dev.off()
pie(tmp2$number, main="파이 그래프 실습",labels=paste(tmp2$V1), col=rainbow(10))
tmp<-click %>% group_by(product=click$V2) %>% summarise(number=n())
barplot(tmp$number, main="세로바 그래프 실습", xlab="상품ID", ylab="클릭 수", col=terrain.colors(15), names.arg=tmp$product)
table(click$V2)
pie(tmp2$number, main="파이 그래프 실습",labels=paste(tmp2$V1), col=rainbow(10))
pie(tmp2$number, main="파이 그래프 실습",labels=paste(tmp2$V1), col=rainbow(19))
barplot(tmp$number, main="세로바 그래프 실습", xlab="상품ID", ylab="클릭 수", col=terrain.colors(15), names.arg=tmp$product,las=2)
barplot(tmp$number, main="세로바 그래프 실습", xlab="상품ID", ylab="클릭 수", col=terrain.colors(15), names.arg=tmp$product,las=3)
2
barplot(tmp$number, main="세로바 그래프 실습", xlab="상품ID", ylab="클릭 수", col=terrain.colors(15), names.arg=tmp$product,las=1)
barplot(tmp$number, main="세로바 그래프 실습", xlab="상품ID", ylab="클릭 수", col=terrain.colors(15), names.arg=tmp$product,las=2)
tmp2
# 히스토그램
hist(성적$국어, main="성적분포-국어", xlab="점수", breaks=5, col = "lightblue", border = "pink")
hist(성적$수학, main="성적분포-수학", xlab="점수", col = "lightblue", border = "pink")
hist(성적$국어, main="성적분포-국어", xlab="점수", ylab="도수", col=rainbow(12), border = "pink")
nums <- sample(1:100, 30)
hist(nums)
hist(nums, breaks=c(0,33,66,100))
# 히스토그램
hist(성적$국어, main="성적분포-국어", xlab="점수", breaks=5, col = "lightblue", border = "pink")
hist(성적$수학, main="성적분포-수학", xlab="점수", col = "lightblue", border = "pink")
hist(성적$국어, main="성적분포-국어", xlab="점수", ylab="도수", col=rainbow(12), border = "pink")
nums <- sample(1:100, 30)
hist(nums)
hist(nums, breaks=c(0,33,66,100))
# 히스토그램
hist(성적$국어, main="성적분포-국어", xlab="점수", breaks=5, col = "lightblue", border = "pink")
hist(성적$수학, main="성적분포-수학", xlab="점수", col = "lightblue", border = "pink")
hist(성적$국어, main="성적분포-국어", xlab="점수", ylab="도수", col=rainbow(12), border = "pink")
nums <- sample(1:100, 30)
hist(nums)
barplot(nums)
hist(nums)
barplot(nums)
hist(nums, breaks=c(0,33,66,100))
hist(nums,10)
hist(nums,2)
hist(nums,breaks=10)
hist(nums,2)
hist(nums,100)
hist(nums)
hist(nums,2)
hist(nums,2)
source('C:/Rstudy/day9.R', encoding = 'UTF-8', echo=TRUE)
lines(density(성적$국어, bw=1), col="black", lwd=3)
# 박스플롯
summary(성적$국어)
boxplot(성적$국어, col="yellow",  ylim=c(0,10), xlab="국어", ylab="성적")
nums <- sample(1:100, 30)
barplot(nums)
hist(nums)
hist(nums, breaks=c(0,33,66,100))
hist(nums,breaks=10)
hist(nums,2)
hist(nums,100)
hist(nums, breaks=c(0,33,66,100))
hist(nums,breaks=10)
hist(nums, breaks=c(0,33,66,100))
barplot(nums)
data <- read.table("온도.txt", header=TRUE, sep=",")
head(data, n=5);
boxplot(data)
boxplot(data, las = 2)
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14))
chtcols = rep(c("red","sienna","palevioletred1","royalblue2"), times=3)
chtcols
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14), col=chtcols)
grid(col="gray", lty=2, lwd=1)
rainbow()
library(readxl)
install.packages(readxl)
install.packages("readxl")
library(readxl)
exdata1<-read_excel("\book\Sample.xlsx")
exdata1<-read_excel("book/Sample.xlsx")
exdata1<-read_excel("book\Sample.xlsx")
exdata1<-read_excel("\book\Sample.xlsx")
exdata1<-read_excel("//book/Sample.xlsx")
exdata1<-read_excel("book/Sample1.xlsx")
exdata1
stem(exdata1$AGE)
hist(exdata1$AGE)
hist(exdata1$AGE, xlim = c(0,60),ylim = c(0,5),main = "AGE분포")
install.packages("descr")
library(descr)
freq(exdata1$SEX,plot = T,main='성별(barplot)')
dist_sex <- table(exdata1$SEX)
dist_sex
barplot(dist_sex)
barplot(dist_sex,ylim = c(0,8))
barplot(dist_sex)
barplot(dist_sex,ylim = c(0,8))
mpg
mpg<-as.data.frame(ggplot2::mpg)
mpg
library(dplyr)
plot(국어, type="o", col="blue")
lines(수학, type="o", pch=16, lty=2, col="red")
title(main="성적그래프", col.main="red", font.main=4)
plot(국어, type="o", col="blue")
plot(국어)
mpg$cty
plot(mpg$cty,mpg$hwy)
plot(mpg$cty,mpg$hwy,pch=3)
plot(고속도로연비=mpg$cty,mpg$hwy,pch=3)
plot(mpg$cty,mpg$hwy,pch=3)
plot(mpg$cty,mpg$hwy,pch=3,xlab = "도시연비",ylab ="고속도로연비" )
mpg
#문제2
mpg %>% group_by(drv) %>% summarise(n())
#문제2
tmp<-mpg %>% group_by(drv) %>% summarise(num=n())
tmp
barplot(drv,num)
barplot(tmp)
tmp
barplot(t(tmp)
barplot(t(tmp))
barplot(tmp$num)
barplot(tmp$num,names.arg=tmp$drv)
barplot(tmp$num,names.arg=tmp$drv,col=rainbow(3))
#문제3
boxplot(hwy~manufacturer,data=mpg)
#문제3
boxplot(hwy~manufacturer,data=mpg,col=heat.colors(15))
#문제3
boxplot(hwy~manufacturer,data=mpg,ylim = c(0,5),col=heat.colors(15))
#문제3
boxplot(hwy~manufacturer,data=mpg,ylim = c(0,40),col=heat.colors(15))
#문제3
boxplot(hwy~manufacturer,data=mpg,ylim = c(5,40,5),col=heat.colors(15))
#문제3
boxplot(hwy~manufacturer,data=mpg,ylim = c(5,40),col=heat.colors(15))
#문제3
boxplot(hwy~manufacturer,data=mpg,ylim = c(5,40),col=heat.colors(15),las=2)
# 박스플롯
summary(성적$국어)
boxplot(성적$국어, col="yellow",  ylim=c(0,10), xlab="국어", ylab="성적")
성적2 <- 성적[,3:5]
boxplot(성적2, col=rainbow(3), ylim=c(0,10), ylab="성적")
data <- read.table("온도.txt", header=TRUE, sep=",")
head(data, n=5);
boxplot(data)
boxplot(data, las = 2)
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14))
chtcols = rep(c("red","sienna","palevioletred1","royalblue2"), times=3)
chtcols
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14), col=chtcols)
grid(col="gray", lty=2, lwd=1)
boxplot(data, las = 2, at = c(1,2,3,4, 6,7,8,9, 11,12,13,14), col=chtcols)
#문제3
boxplot(hwy~manufacturer,data=mpg,ylim = c(5,40),col=heat.colors(15),las=2)
#문제3
boxplot(hwy~manufacturer,data=mpg,ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),las=2)
#문제3
boxplot(hwy~manufacturer,data=mpg,main="제조사별 고속도로 연비",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),las=2)
#문제3
boxplot(hwy~manufacturer,data=mpg,main="*제조사별 고속도로 연비*",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),las=2)
#문제3
boxplot(hwy~manufacturer,data=mpg,main="*제조사별 고속도로 연비*",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),col.main="pink",las=2)
#문제3
boxplot(hwy~manufacturer,data=mpg,main="*제조사별 고속도로 연비*",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),col.main="purple",las=2)
# 추세선 추가
hist(성적$국어, main="성적분포-국어", xlab="점수", ylab="도수", col=rainbow(12), border = "pink",prob=T)
lines(density(성적$국어, bw=0.5), col="blue", lwd=3)
lines(density(성적$국어, bw=1), col="black", lwd=3)
boxplot(성적$국어, col="yellow",  ylim=c(0,10), xlab="국어", ylab="성적")
boxplot(성적2, col=rainbow(3), ylim=c(0,10), ylab="성적")
#문제3
boxplot(hwy~manufacturer,data=mpg,main="*제조사별 고속도로 연비*",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),col.main="purple",las=2)
#문제3
boxplot(hwy~manufacturer,data=mpg,main="*제조사별 고속도로 연비*",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),col.main="indipink",las=2)
#문제3
boxplot(hwy~manufacturer,data=mpg,main="*제조사별 고속도로 연비*",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),col.main="magenta",las=2)
mpg<-as.data.frame(ggplot2::mpg)
mpg
library(dplyr)
#문제1
mpg$cty
plot(mpg$cty,mpg$hwy,pch=3,xlab = "도시연비",ylab ="고속도로연비" )
#문제2
tmp<-mpg %>% group_by(drv) %>% summarise(num=n())
barplot(tmp$num,names.arg=tmp$drv,col=rainbow(3))
colors()
#문제3
boxplot(hwy~manufacturer,data=mpg,main="*제조사별 고속도로 연비*",ylim = c(5,40),xlab = "",ylab ="고속도로연비",col=heat.colors(15),col.main="magenta",las=2)
head(airquality)
summary(airquality)
cat(airquality)
view(airquality)
view(airquality)
View(airquality)
str(airquality)
dim(airquality)
names(airquality)
install.packages("reshape2")
tail(airquality)
library(reshape2)
names(airquality)<-tolower(names(airquality))
head(airquality)
melt_test<-melt(airquality)
head(melt_test)
dim(airquality)
dim(melt_test)
View(melt_test)
#melt 테스트2
melt_test2<-melt(airquality, id.vars = c("month","wind"),measure.vars = "ozone")
View(melt_test2)
View(airquality)
#KoNLP 패키지 로드
library(KoNLP)
#KoNLP 패키지 로드
install.packages("KoNLP")
library(KoNLP)
useSejongDic()
useNIADic()
word_data<-readLines("/book/애국가(가사).txt")
word_data<-readLines("book/애국가(가사).txt")
word_data2<-sapply(word_data, extractNoun,USE.NAMES = F)
word_data2
buildDictionary(user_dic = data.frame(add_words,rep("ncn",length(add_words))),replace_usr_dic = T)
buildDictionary(user_dic = data.frame(add_words,rep("ncn",length(add_words))),replace_usr_dic = T)
#단어 추가
add_words<-c("백두산","남산","철갑","가을","하늘","달")
buildDictionary(user_dic = data.frame(add_words,rep("ncn",length(add_words))),replace_usr_dic = T)
word_data2<-sapply(word_data, extractNoun,USE.NAMES = F)
word_data2
word_data<-readLines("book/애국가(가사).txt")
word_data2<-sapply(word_data, extractNoun,USE.NAMES = F)
word_data2
undata<-unlist(word_data2)
undata
word_table<-table(undata)
word_table
undata2<-Filter(function(x){nchar(x)>=2},undata)
word_table2<-table(undata2)
word_table
word_table2
sort(word_table2,decreasing = T)
installed.packages()
#워드 클라우드
install.packages('wordcloud2')
library(wordcloud2)
wordcloud2(word_table2)
wordcloud2(word_table2)
wordcloud2(word_table2)
wordcloud2(word_table2)
wordcloud2(word_table2)
wordcloud2(word_table2)
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(word_table2)
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreqC,figPath ="book/peace.png")
wordcloud2(demoFreq)
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq, size=clsize, color =clcolor, backgroundColor =clbgcolor, figPath = "book/peace.png")
wordcloud2(demoFreq,  color =clcolor, backgroundColor =clbgcolor, figPath = "book/peace.png")
library(devtools)
devtools::install_github("lchiffon/wordcloud2")
wordcloud2(demoFreq,figPath = "book/peace.png")
wordcloud2(demoFreq,figPath = "book/peace.png")
words<-read.csv("wc.csv")
words
word_table2
#기술 뽑기
result<-NULL
#첫페이지
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
remDr$navigate("https://www.jobkorea.co.kr")
webElem <- remDr$findElement(using="css","[name='stext']")
webElem$sendKeysToElement(list("자바",key="enter"))
#기술 뽑기
result<-NULL
#첫페이지
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
#2~10페이지
for(j in 2:10){
css<-paste("#smGiList > div.tplPagination > ul > li:nth-child(",j,") > a")
doms1<-remDr$findElements(using ="css selector",css)
Sys.sleep(1)
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
}
result
result<-strsplit(result,", ")
result<-unlist(result)
result<-table(result)
sort(result,decreasing = T)
wordcloud2(result)
#잡코리아 검색창에 자바 치기
library(RSelenium)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445, browserName="chrome")
remDr$open()
remDr$navigate("https://www.jobkorea.co.kr")
webElem <- remDr$findElement(using="css","[name='stext']")
webElem$sendKeysToElement(list("자바",key="enter"))
#기술 뽑기
result<-NULL
endFlag<-0
repeat{
#첫페이지
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
endFlag<-endFlag+1
#2~10페이지
for(j in 2:10){
css<-paste("#smGiList > div.tplPagination > ul > li:nth-child(",j,") > a")
doms1<-remDr$findElements(using ="css selector",css)
Sys.sleep(1)
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
}
if(endFlag==20)
break;
##11페이지로 넘기기
doms1<-remDr$findElements(using ="css selector","#smGiList > div.tplPagination > p > a")
Sys.sleep(1)
}
result
endFlag
endFlag
#기술 뽑기
result<-NULL
endFlag<-0
repeat{
#첫페이지
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
endFlag<-endFlag+1
#2~10페이지
for(j in 2:10){
css<-paste("#smGiList > div.tplPagination > ul > li:nth-child(",j,") > a")
doms1<-remDr$findElements(using ="css selector",css)
Sys.sleep(1)
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
}
if(endFlag==2)
break;
##11페이지로 넘기기
doms1<-remDr$findElements(using ="css selector","#smGiList > div.tplPagination > p > a")
Sys.sleep(1)
}
remDr$open()
remDr$navigate("https://www.jobkorea.co.kr")
webElem <- remDr$findElement(using="css","[name='stext']")
webElem$sendKeysToElement(list("자바",key="enter"))
#기술 뽑기
result<-NULL
endFlag<-0
repeat{
endFlag<-endFlag+1
#첫페이지
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
#2~10페이지
for(j in 2:10){
css<-paste("#smGiList > div.tplPagination > ul > li:nth-child(",j,") > a")
doms1<-remDr$findElements(using ="css selector",css)
Sys.sleep(1)
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
}
if(endFlag==2)
break;
##11페이지로 넘기기
doms1<-remDr$findElements(using ="css selector","#smGiList > div.tplPagination > p > a")
Sys.sleep(1)
}
result
result<-strsplit(result,", ")
result<-unlist(result)
result<-table(result)
sort(result,decreasing = T)
remDr$open()
remDr$navigate("https://www.jobkorea.co.kr")
webElem <- remDr$findElement(using="css","[name='stext']")
webElem$sendKeysToElement(list("자바",key="enter"))
#기술 뽑기
result<-NULL
endFlag<-0
repeat{
endFlag<-endFlag+1
#첫페이지
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
#2~10페이지
for(j in 2:10){
css<-paste("#smGiList > div.tplPagination > ul > li:nth-child(",j,") > a")
doms1<-remDr$findElements(using ="css selector",css)
Sys.sleep(1)
for(i in 1:30){
css<-paste("#smGiList > div.list > ul > li:nth-child(",i,") > span.detailInfo > p.gibInfo > a")
doms1<-remDr$findElements(using ="css selector",css)
tech <- sapply(doms1,function(x){x$getElementText()})
tech_v <- unlist(tech)
result<-c(result,tech_v)
}
}
if(endFlag==2)
break;
##11페이지로 넘기기
doms1<-remDr$findElements(using ="css selector","#smGiList > div.tplPagination > p > a")
Sys.sleep(1)
}
write(result, "jobwithjava.txt")
result<-strsplit(result,", ")
result<-unlist(result)
result<-table(result)
sort(result,decreasing = T)
wordcloud2(result)
write.csv(result, "jobwithjava.csv")
result<-sort(result,decreasing = T)
write.csv(result, "jobwithjava.csv")
colnames(result,c("키워드","빈도수"))
colnames(result)=c("키워드","빈도수")
result
View(result)
colnames(result)=c("키워드","빈도수")
result<-colnames(result)=c("키워드","빈도수")
colnames(result)=c("키워드","빈도수")
names(result)
rownames(result)=c("키워드","빈도수")
names(result)
result
colnames(result)
data.frame(result)
result<-data.frame(result)
colnames(result)=c("키워드","빈도수")
result
result[1:15]
head(result,15)
write.csv(head(result,15), "jobwithjava.csv")
write.csv(head(result,15), "jobwithjava.csv")
library(wordcloud2)
wordcloud2(result)
