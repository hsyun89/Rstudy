legend(11,30, names(성적1), cex=0.8, fill=rainbow(3));
xname
ggplot(tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point()
ggplot(tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(tmp$SPECIES)
#산점도 데이터 레이블
ggplot(airquality,aes(x=Day,y=Temp))+
geom_point()+
geom_text(aes(label=Temp,vjust=0,hjust=0))
airquality
#porb3
ggplot(tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(color=species))
#porb3
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(color=species))
tmp
#porb3
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(color=SPECIES,shpe=SPECIES))
#porb3
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(color=SPECIES,shape=SPECIES))
#porb3
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(color=SPECIES))
ggplot(data=tmp,aes(x=PLENGTH,y=PWIDTH))+
geom_point(aes(color=SPECIES))
#porb3
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(color=SPECIES))
ggsave("db1.jpg")
ggplot(data=tmp,aes(x=PLENGTH,y=PWIDTH))+
geom_point(aes(color=SPECIES))
ggsave("db2.jpg")
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH,fill=SPECIES))
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(fill=SPECIES))
color
ggplot(data=tmp,aes(x=SLENGTH,y=SWIDTH))+
geom_point(aes(color=SPECIES))
#######java와 R의 연동
install.packages("Rserve")
.libPaths()
library(KoNLP)
install.packages("KoNLP")
install.packages("KoNLP")
library(KoNLP)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
install.packages("KoNLP")
install.packages("KoNLP")
library(rJava)
library(KoNLP)
library(XML)
library(rvest)
library(KoNLP)
library(rJava)
library(KoNLP)
library(XML)
library(rvest)
library(KoNLP)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
install.packages("KoNLP")
install.packages("KoNLP")
library(rJava)
library(KoNLP)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
library(KoNLP)
library(rJava)
library(KoNLP)
remove.packages ("KoNLP")
remove.packages ("rJava")
install.packages("KoNLP")
install.packages("KoNLP")
install.packages("rJava")
library(KoNLP)
library(rJava)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
install.packages("rJava")
library(rJava)
remove.packages("KoNLP")
remove.packages("rJava")
remove.packages("rJava")
remove.packages("KoNLP")
install.packages("KoNLP")
install.packages("rJava")
library(KoNLP)
library(rJava)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
install.packages("rJava")
install.packages("rJava")
install.packages("KoNLP")
library(rJava)
library(KoNLP)
library(KoNLP)
library(XML)
library(rvest)
library(rvest)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(KoNLP)
library(KoNLP)
install.packages("KoNLP")
install.packages("rJava")
library(KoNLP)
library(rJava)
install.packages("rJava")
View(성적2)
install.packages("rJava")
install.packages("KoNLP")
library(KoNLP)
library(rJava)
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
library(Sejong)
detach("package:Sejong", unload = TRUE)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
detach("package:KoNLP", unload = TRUE)
install.packages("KoNLP")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
library(KoNLP)
install.packages("rJava")
library(KoNLP)
library(rJava)
library(rJava)
library(KoNLP)
source("test.R")
source("test.R")
?source
imsi<-source("test.R")
imsi
imsi$value
library(KoNLP)
useSejongDic()
useNIADic()
word_data<-readLines("hotel2.txt")
word_data2<-sapply(word_data, extractNoun,USE.NAMES = F)
word_data2
undata<-unlist(word_data2)
undata
word_table<-table(undata)
word_table
sort(word_table2,decreasing = T)
sort(word_table,decreasing = T)
undata2<-Filter(function(x){nchar(x)>=2},undata)
word_table2<-table(undata2)
word_table2
sort(word_table2,decreasing = T)
sort(word_table2,decreasing = T) %>% head(10)
result<-sort(word_table2,decreasing = T) %>% head(10)
result
word_table2
tmp<-data.frame(word_table2)
tmp
result<-sort(tmp,decreasing = T) %>% head(10)
result<-sort(tmp$Freq,decreasing = T) %>% head(10)
result
sort(tmp$Freq,decreasing = T)
tmp$undata2 %>% sort(tmp$Freq, decreasing = T)
result<-tmp$undata2 %>% sort(tmp$Freq, decreasing = T) %>% head(10)
result
result<-tmp$undata2 %>% sort(tmp$Freq, decreasing = F) %>% head(10)
result
tmp
tmp$undata2 %>% sort(tmp$Freq, decreasing = F)
result<-arrange(tmp$undata2)
result<-arrange(tmp$undata2,tmp$Freq)
result<-arrange(tmp$undata2,desc(tmp$Freq))
tmp$undata2
result<-tmp$undata2 %>% arrange(tmp$Freq)
tmp
arrange(tmp,tmp$Freq)
arrange(tmp,tmp$Freq) %>% tmp$undata2
arrange(tmp,tmp$Freq) %>% select(tmp$undata2)
result<-arrange(tmp,tmp$Freq) %>% head(10)
result
arrange(tmp,tmp$Freq) %>% head(10)
arrange(tmp,desc(tmp$Freq)) %>% head(10)
result<-arrange(tmp,desc(tmp$Freq)) %>% head(10)
result
result$undata2
result$undata2
result
result<-arrange(tmp,desc(tmp$Freq)) %>% head(10)
result
result$Freq
result$undata2
library(KoNLP)
library(dplyr)
useNIADic()
word_data<-readLines("hotel2.txt")
word_data2<-sapply(word_data, extractNoun,USE.NAMES = F)
undata<-unlist(word_data2)
word_table<-table(undata)
undata2<-Filter(function(x){nchar(x)>=2},undata)
word_table2<-table(undata2)
tmp<-data.frame(word_table2)
result<-arrange(tmp,desc(tmp$Freq)) %>% head(10)
result
imsi<-source('c:/RStudy/lab.R');
imsi
imsi$value
library(plotly)
# ggplot으로 그래프 만들기
library(ggplot2)
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
# 인터랙티브 그래프 만들기
ggplotly(p)
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
# 인터랙티브 막대 그래프 만들기
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplotly(p)
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
# 인터랙티브 그래프 만들기
ggplotly(p)
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
# 인터랙티브 그래프 만들기
ggplotly(p)
library(wordcloud2)
wordcloud2(word_table2)
wordcloud2(demoFreq,figPath = "book/peace.png")
library(devtools)
devtools::install_github("lchiffon/wordcloud2")
words<-read.csv("wc.csv",stringsAsFactors = F)
wordcloud2(words)
wordcloud2(words,rotateRatio = 1)
wordcloud2(words,rotateRatio = 0.5)
wordcloud2(words,rotateRatio = 0)
wordcloud2(words, size = 0.5)
color
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
mymap <- korpopmap3@data
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
library(Kormaps)
names(korpopmap1)
names(korpopmap2)
names(korpopmap3)
head(korpopmap1)
head(korpopmap2)
head(korpopmap3)
crime <- read.csv('2017crime.csv')
Encoding(names(korpopmap2))<-'UTF-8'
Encoding(korpopmap2@data$name)<-'UTF-8'
Encoding(korpopmap2@data$행정구역별_읍면동)<-'UTF-8'
korpopmap2@data <- korpopmap2@data[-26:-251,]
korpopmap2@polygons<-korpopmap2@polygons[-26:-251]
mymap <- korpopmap2@data
head(mymap)
palette1<-colorNumeric(palette = 'Oranges', domain = crime$살인_발생)
popup1 <- paste0(mymap$name,'<br> 살인 : ',crime$살인_발생, '건')
map4<-leaflet(korpopmap2) %>% addTiles() %>% setView(lat=37.559957 ,lng=126.975302 , zoom=11)%>%
addPolygons(stroke=FALSE,smoothFactor=0.2,fillOpacity=.5, popup=popup1, color=~palette1(crime$살인_발생), group='살인')
map4
palette2<-colorNumeric(palette = 'Blues', domain = crime$폭력_발생)
popup2 <- paste0(mymap$name,'<br> 폭력 : ',crime$폭력_발생, '건')
map5<-leaflet(korpopmap2) %>% addTiles() %>% setView(lat=37.559957 ,lng=126.975302 , zoom=11)%>%
addPolygons(stroke=FALSE,smoothFactor=0.2,fillOpacity=.5, popup=popup2, color=~palette2(crime$폭력_발생), group='폭력')
map5
palette3<-colorNumeric(palette = 'Reds', domain = crime$범죄_발생_총합)
popup3 <- paste0(mymap$name,'<br> 범죄총합 : ',crime$범죄_발생_총합, '건')
map6<-leaflet(korpopmap2) %>% addTiles() %>% setView(lat=37.559957 ,lng=126.975302 , zoom=11)%>%
addPolygons(stroke=FALSE,smoothFactor=0.2,fillOpacity=.5, popup=popup3, color=~palette3(crime$범죄_발생_총합),group='총 범죄')
map6
palette2<-colorNumeric(palette = 'Blues', domain = crime$폭력_발생)
popup2 <- paste0(mymap$name,'<br> 폭력 : ',crime$폭력_발생, '건')
map8<-leaflet(korpopmap2) %>% addTiles() %>% setView(lat=37.559957 ,lng=126.975302 , zoom=11)%>%
addPolygons(stroke=FALSE,smoothFactor=0.2,fillOpacity=.5, popup=popup2, color=~palette2(crime$폭력_발생), group='폭력') %>%
addPolygons(stroke=FALSE,smoothFactor=0.2,fillOpacity=.5, popup=popup3, color=~palette3(crime$범죄_발생_총합),group='총 범죄')
map8
clearGroup(map8,'폭력')
DONG<-read.csv('c:/RStudy/one.csv')
head(DONG)
data(korpopmap3)
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name_eng)<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
korpopmap3@data<-korpopmap3@data[c(67:81),]
korpopmap3@polygons<-korpopmap3@polygons[c(67:81)]
korpopmap3@data$name<-gsub('·','',korpopmap3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong<- DONG %>%filter(구별=='광진구')
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
mymap <- korpopmap3@data
mypalette <- colorNumeric(palette ='RdYlBu' , domain = mymap$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',mymap$'일인가구')
map7 <- NULL
map7<-leaflet(korpopmap3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
smoothFactor = 0.2,
fillOpacity = .9,
popup = mypopup,
color = ~mypalette(mymap$일인가구)) %>%
addLegend( values = ~mymap$일인가구,
pal =mypalette ,
title = '인구수',
opacity = 1)
map7
library(leaflet)
library(dplyr)
library(ggmap)
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
mymap <- korpopmap3@data
mypalette <- colorNumeric(palette ='RdYlBu' , domain = mymap$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',mymap$'일인가구')
DONG<-read.csv('c:/RStudy/one.csv')
head(DONG)
data(korpopmap3)
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name_eng)<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
korpopmap3@data<-korpopmap3@data[c(67:81),]
korpopmap3@polygons<-korpopmap3@polygons[c(67:81)]
korpopmap3@data$name<-gsub('·','',korpopmap3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong<- DONG %>%filter(구별=='광진구')
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
mymap <- korpopmap3@data
mypalette <- colorNumeric(palette ='RdYlBu' , domain = mymap$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',mymap$'일인가구')
map7 <- NULL
map7<-leaflet(korpopmap3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
smoothFactor = 0.2,
fillOpacity = .9,
popup = mypopup,
color = ~mypalette(mymap$일인가구)) %>%
addLegend( values = ~mymap$일인가구,
pal =mypalette ,
title = '인구수',
opacity = 1)
map7
map7
library(Kormaps)
names(korpopmap1)
names(korpopmap2)
names(korpopmap3)
head(korpopmap1)
head(korpopmap2)
head(korpopmap3)
crime <- read.csv('2017crime.csv')
Encoding(names(korpopmap2))<-'UTF-8'
Encoding(korpopmap2@data$name)<-'UTF-8'
Encoding(korpopmap2@data$행정구역별_읍면동)<-'UTF-8'
korpopmap2@data <- korpopmap2@data[-26:-251,]
korpopmap2@polygons<-korpopmap2@polygons[-26:-251]
mymap <- korpopmap2@data
head(mymap)
palette1<-colorNumeric(palette = 'Oranges', domain = crime$살인_발생)
popup1 <- paste0(mymap$name,'<br> 살인 : ',crime$살인_발생, '건')
map4<-leaflet(korpopmap2) %>% addTiles() %>% setView(lat=37.559957 ,lng=126.975302 , zoom=11)%>%
addPolygons(stroke=FALSE,smoothFactor=0.2,fillOpacity=.5, popup=popup1, color=~palette1(crime$살인_발생), group='살인')
map4
palette2<-colorNumeric(palette = 'Blues', domain = crime$폭력_발생)
popup2 <- paste0(mymap$name,'<br> 폭력 : ',crime$폭력_발생, '건')
map5<-leaflet(korpopmap2) %>% addTiles() %>% setView(lat=37.559957 ,lng=126.975302 , zoom=11)%>%
addPolygons(stroke=FALSE,smoothFactor=0.2,fillOpacity=.5, popup=popup2, color=~palette2(crime$폭력_발생), group='폭력')
map5
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
mymap <- korpopmap3@data
mypalette <- colorNumeric(palette ='RdYlBu' , domain = mymap$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',mymap$'일인가구')
map7 <- NULL
map7<-leaflet(korpopmap3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
smoothFactor = 0.2,
fillOpacity = .9,
popup = mypopup,
color = ~mypalette(mymap$일인가구)) %>%
addLegend( values = ~mymap$일인가구,
pal =mypalette ,
title = '인구수',
opacity = 1)
map7
p <- ggplot(data = mpg, aes(x = displ, y = hwy, col = drv)) + geom_point()
# 인터랙티브 그래프 만들기
imsi<-ggplotly(p)
str(imsi)
imsi
renderTags(imsi)
library(htmltools)
renderTags(imsi)
renderTags(imsi)
ggplotly(p)
# 인터랙티브 막대 그래프 만들기
p <- ggplot(data = diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "dodge")
ggplotly(p)
DONG<-read.csv('c:/RStudy/one.csv')
head(DONG)
data(korpopmap3)
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name_eng)<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
korpopmap3@data<-korpopmap3@data[c(359:380),]
korpopmap3@polygons<-korpopmap3@polygons[c(359:380)]
View(korpopmap3@data)
View(korpopmap3@polygons)
korpopmap3@data$name<-gsub('·','',korpopmap3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong<- DONG %>%filter(구별=='강남구')
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
mymap <- korpopmap3@data
mypalette <- colorNumeric(palette ='RdYlBu' , domain = mymap$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',mymap$'일인가구')
map7 <- NULL
map7<-leaflet(korpopmap3) %>%
addTiles() %>%
setView(lat=37.52711, lng=126.987517, zoom=12) %>%
addPolygons(stroke =FALSE,
smoothFactor = 0.2,
fillOpacity = .9,
popup = mypopup,
color = ~mypalette(mymap$일인가구)) %>%
addLegend( values = ~mymap$일인가구,
pal =mypalette ,
title = '인구수',
opacity = 1)
map7
DONG<-read.csv('c:/RStudy/one.csv')
head(DONG)
data(korpopmap3)
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name_eng)<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
korpopmap3@data
DONG
map7<-leaflet(korpopmap3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>% addPolygons(stroke =FALSE, smoothFactor = 0.2, fillOpacity = .9, popup = mypopup, color = ~mypalette(mymap$일인가구)) %>% addLegend( values = ~mymap$일인가구, pal =mypalette, title = '인구수', opacity = 1)
map7
DONG<-read.csv('c:/RStudy/one.csv')
head(DONG)
data(korpopmap3)
Encoding(names(korpopmap3))<-'UTF-8'
Encoding(korpopmap3@data$name_eng)<-'UTF-8'
Encoding(korpopmap3@data$name)<-'UTF-8'
Encoding(korpopmap3@data$행정구역별_읍면동)<-'UTF-8'
korpopmap3@data<-korpopmap3@data[c(359:380),]
korpopmap3@polygons<-korpopmap3@polygons[c(359:380)]
View(korpopmap3@data)
View(korpopmap3@polygons)
korpopmap3@data$name<-gsub('·','',korpopmap3@data$name)
colnames(DONG)<-c('구별','name','일인가구')
dong<- DONG %>%filter(구별=='강남구')
korpopmap3@data<-merge(korpopmap3@data,dong,by.x='name',sort=FALSE)
mymap <- korpopmap3@data
mypalette <- colorNumeric(palette ='RdYlBu' , domain = mymap$'일인가구')
mypopup <- paste0(mymap$name,'<br> 1인가구: ',mymap$'일인가구')
map7 <- NULL
map7<-leaflet(korpopmap3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>% addPolygons(stroke =FALSE, smoothFactor = 0.2, fillOpacity = .9, popup = mypopup, color = ~mypalette(mymap$일인가구)) %>% addLegend( values = ~mymap$일인가구, pal =mypalette, title = '인구수', opacity = 1)
map7
library(htmlwidgets)
map7<-leaflet(korpopmap3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>% addPolygons(stroke =FALSE, smoothFactor = 0.2, fillOpacity = .9, popup = mypopup, color = ~mypalette(mymap$일인가구)) %>% addLegend( values = ~mymap$일인가구, pal =mypalette, title = '인구수', opacity = 1)
map7
map7 <- NULL
map7<-leaflet(korpopmap3) %>% addTiles() %>% setView(lat=37.52711, lng=126.987517, zoom=12) %>% addPolygons(stroke =FALSE, smoothFactor = 0.2, fillOpacity = .9, popup = mypopup, color = ~mypalette(mymap$일인가구)) %>% addLegend( values = ~mymap$일인가구, pal =mypalette, title = '인구수', opacity = 1)
map7
Encoding(korpopmap3@data$name_eng)<-'UTF-8'
View(korpopmap3@data)
head(DONG)
data(korpopmap3)
View(korpopmap3@data)
